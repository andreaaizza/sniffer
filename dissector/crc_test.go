package dissector

import (
	"testing"
)

/* Some teses from Modbus logging:
2020/09/12 19:53:57 5
2020/09/12 19:53:57 Start logging...
2020/09/12 19:53:58 02040000000A703E [002 004 000 000 000 010 112 062]
2020/09/12 19:53:58 FIFO: [1599940438331497370]02040000000A703E
2020/09/12 19:53:58 0204148003800380 [002 004 020 128 003 128 003 128]
2020/09/12 19:53:58 FIFO: [1599940438331497370]02040000000A703E[1599940438373968108]0204148003800380
2020/09/12 19:53:58 0180018001800300 [001 128 001 128 001 128 003 000]
2020/09/12 19:53:58 FIFO: [1599940438331497370]02040000000A703E[1599940438373968108]0204148003800380[1599940438383052394]0180018001800300
2020/09/12 19:53:58 3780038003800390 [055 128 003 128 003 128 003 144]
2020/09/12 19:53:58 FIFO: [1599940438331497370]02040000000A703E[1599940438373968108]0204148003800380[1599940438383052394]0180018001800300[1599940438392943946]3780038003800390
2020/09/12 19:53:58 1F [031]
2020/09/12 19:53:58 FIFO: [1599940438331497370]02040000000A703E[1599940438373968108]0204148003800380[1599940438383052394]0180018001800300[1599940438392943946]3780038003800390[1599940438405202849]1F
*/
func TestCrc(t *testing.T) {
	d0 := []byte{0x02, 0x04, 0x0, 0x0, 0x00, 0x0a}
	ans := calcCRC(d0)
	if ans != 0x3E70 {
		t.Errorf("crc(%02X)=%02X(%04d), want 0x3E70", d0, ans, ans)
	}
	d1 := []byte{0x02, 0x04, 0x14, 0x80, 0x03, 0x80, 0x03, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x03, 0x00, 0x37, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03}
	ans = calcCRC(d1)
	if ans != 0x1f90 {
		t.Errorf("crc(%02X)=%02X(%04d), want 0x1F90", d1, ans, ans)
	}
}
